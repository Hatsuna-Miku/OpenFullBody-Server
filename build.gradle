/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
	id 'application'
	id "com.github.johnrengelman.shadow" version "6.1.0"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Set compiler to use UTF-8
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	if (JavaVersion.current().isJava9Compatible()) {
		// TODO: Gradle 6.6
		// options.release = 8
		options.compilerArgs.addAll(['--release', '8'])
	}
}
tasks.withType(Test) {
	systemProperty('file.encoding', 'UTF-8')
}
tasks.withType(Javadoc) {
	options.encoding = 'UTF-8'
}

repositories {
	// Use jcenter for resolving dependencies.
	// You can declare any Maven/Ivy/file repository here.
	jcenter()
	mavenCentral()
}

dependencies {
	implementation project(':OpenFullBody Java Commons')

	// This dependency is exported to consumers, that is to say found on their compile classpath.
	implementation 'org.apache.commons:commons-math3:3.6.1'
	implementation 'org.yaml:snakeyaml:1.25'
	implementation 'net.java.dev.jna:jna:5.6.0'
	implementation 'net.java.dev.jna:jna-platform:5.6.0'
	implementation 'com.illposed.osc:javaosc-core:0.8'
	implementation 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
	implementation 'com.google.protobuf:protobuf-java:3.17.3'
	implementation "org.java-websocket:Java-WebSocket:1.5.1"

	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
	implementation 'com.google.guava:guava:28.2-jre'

	// Use JUnit test framework
	testImplementation platform('org.junit:junit-bom:5.7.2')
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.junit.platform:junit-platform-launcher'
}
test {
	useJUnitPlatform()
}

shadowJar {
	archiveBaseName.set('openfullbody')
	archiveClassifier.set('')
	archiveVersion.set('')
}
application {
	mainClassName = 'io.eiren.vr.Main'
}
